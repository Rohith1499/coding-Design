# -*- coding: utf-8 -*-
"""MinStack.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dNbqmDLZRTDlQPYJ4VLKKa1jf5vrH3pl
"""

#Time Complexity: O(n)
#Space Complexity: O(n)

class MinStack(object):
        
    def __init__(self):
    
        self.stack=[]
        math.inf = float('inf')
        self.min1 = math.inf
        self.stack.append(self.min1)


    def push(self, val):
        """
        :type val: int
        :rtype: None
        """
        if self.min1>=val:
            self.stack.append(self.min1)
            self.min1=val
        
        self.stack.append(val)
        

    def pop(self):
        """
        :rtype: None
        """
        self.temp = self.stack[-1]
        self.stack.pop()
        if(self.temp == self.min1):
            self.min1=self.stack[-1]
            self.stack.pop()
        

    def top(self):
        """
        :rtype: int
        """
        return self.stack[-1]
        

    def getMin(self):
        """
        :rtype: int
        """
        return self.min1


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(val)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()